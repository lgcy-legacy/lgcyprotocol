plugins {
    id 'java'
}

version '1.0.0'

sourceCompatibility = 1.8

// Dependency versions
// ---------------------------------------

def leveldbVersion = "1.8"
// --------------------------------------

static def isWindows() {
    return org.gradle.internal.os.OperatingSystem.current().isWindows()
}

if (isWindows()) {
    ext {
        leveldbGroup = "org.ethereum"
        leveldbName = "leveldbjni-all"
        leveldbVersion = "1.18.3"
    }
} else {
    ext {
        leveldbGroup = "org.fusesource.leveldbjni"
        leveldbName = "leveldbjni-all"
        leveldbVersion = "1.8"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile "com.madgag.spongycastle:core:1.58.0.0"
    compile "com.madgag.spongycastle:prov:1.58.0.0"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.5'
    compile "com.cedarsoftware:java-util:1.8.0"
    compile group: 'org.apache.httpcomponents', name: 'httpasyncclient', version: '4.1.1'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.11'
    compile group: 'com.beust', name: 'jcommander', version: '1.72'
    compile group: 'com.typesafe', name: 'config', version: '1.3.2'
    compile group: leveldbGroup, name: leveldbName, version: leveldbVersion
    compile project(":protocol")
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
    executionData = files('../framework/build/jacoco/jacocoTest.exec')
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,)
        })
    }
}
